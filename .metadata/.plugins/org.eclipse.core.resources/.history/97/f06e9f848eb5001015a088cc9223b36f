package adminServlet;

import DAO.CategoryDAO;
import DAO.CategoryDAOImpl;
import DAO.NewsDAO;
import DAO.NewsDAOImpl;
import Entity.Category;
import Entity.News;
import Entity.User;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.MultipartConfig;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import jakarta.servlet.http.Part;

import java.io.File;
import java.io.IOException;
import java.sql.Date;
import java.util.List;
import java.util.UUID;

// ƒê·∫∑t c·∫•u h√¨nh MultipartConfig chi ti·∫øt h∆°n cho file upload l·ªõn
@WebServlet("/admin/add_edit_news")
@MultipartConfig(
    fileSizeThreshold = 1024 * 1024 * 2, // 2MB
    maxFileSize = 1024 * 1024 * 10,      // 10MB
    maxRequestSize = 1024 * 1024 * 50    // 50MB
)
public class AdminAddEditNewsServlet extends HttpServlet {

    private static final String UPLOAD_DIR = "uploads";

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp)
            throws ServletException, IOException {

        // C·∫•u h√¨nh encoding cho response (quan tr·ªçng cho ti·∫øng Vi·ªát)
        resp.setCharacterEncoding("UTF-8");
        req.setCharacterEncoding("UTF-8");

        CategoryDAO categoryDAO = new CategoryDAOImpl();
        List<Category> categories = categoryDAO.findAll();
        req.setAttribute("categories", categories);

        String id = req.getParameter("id");
        if (id != null && !id.isEmpty()) {
            NewsDAO newsDAO = new NewsDAOImpl();
            // S·ª≠ d·ª•ng getById ƒë·ªÉ l·∫•y c·∫£ CategoryName v√† AuthorName n·∫øu c·∫ßn hi·ªÉn th·ªã
            News news = newsDAO.getById(id); 
            req.setAttribute("news", news);
        }

        // ƒê·∫£m b·∫£o JSP l√† n∆°i ch·ª©a form b·∫°n ƒë√£ cung c·∫•p
        req.getRequestDispatcher("/admin/edit_news.jsp").forward(req, resp);
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp)
            throws ServletException, IOException {

        req.setCharacterEncoding("UTF-8");
        resp.setCharacterEncoding("UTF-8");

        HttpSession session = req.getSession();
        User user = (User) session.getAttribute("user");

        // Ki·ªÉm tra phi√™n ƒëƒÉng nh·∫≠p
        if (user == null) {
            resp.sendRedirect(req.getContextPath() + "/login");
            return;
        }

        // 1. L·∫§Y D·ªÆ LI·ªÜU T·ª™ FORM
        String id = req.getParameter("id");
        String title = req.getParameter("title");
        String content = req.getParameter("content");
        String categoryId = req.getParameter("categoryId");
        String postedDateStr = req.getParameter("postedDate");
        String positionStr = req.getParameter("position");
        
        String oldImage = req.getParameter("oldImage");
        String authorId = user.getId();
        
        String status = req.getParameter("status"); 
        
        Integer position = (positionStr != null && !positionStr.isEmpty()) ? Integer.valueOf(positionStr) : null;
        boolean home = false; 

        // 2. X·ª¨ L√ù ID V√Ä VIEWS
        NewsDAO newsDAO = new NewsDAOImpl();
        News news = new News();
        boolean isUpdating = (id != null && !id.isEmpty());
        String successMessage = "";
        
        if (isUpdating) {
            // Ch·∫ø ƒë·ªô S·ª¨A
            news.setId(id);
            News oldNews = newsDAO.getById(id);
            if (oldNews != null) {
                news.setViewCount(oldNews.getViewCount());
                successMessage = "C·∫≠p nh·∫≠t tin t·ª©c th√†nh c√¥ng!";
            } else {
                news.setViewCount(0); 
            }
        } else {
            // Ch·∫ø ƒë·ªô TH√äM M·ªöI
            news.setId(UUID.randomUUID().toString());
            news.setViewCount(0); 
            successMessage = "Th√™m tin t·ª©c m·ªõi th√†nh c√¥ng!";
        }

        // 3. X·ª¨ L√ù FILE UPLOAD
        Part imagePart = req.getPart("image");
        String fileName = oldImage; 
        String uploadPath = getServletContext().getRealPath(File.separator + UPLOAD_DIR);
        File uploadDir = new File(uploadPath);
        
        if (!uploadDir.exists()) uploadDir.mkdirs();

        if (imagePart != null && imagePart.getSize() > 0 && imagePart.getSubmittedFileName() != null) {
            fileName = UUID.randomUUID().toString() + "_" + imagePart.getSubmittedFileName();
            // Ghi file v√†o th∆∞ m·ª•c UPLOADS
            imagePart.write(uploadPath + File.separator + fileName);
        } else if (fileName == null || fileName.isEmpty()) {
            // Tr∆∞·ªùng h·ª£p th√™m m·ªõi m√† kh√¥ng c√≥ ·∫£nh, d√πng default.jpg
            fileName = "default.jpg"; 
        }

        // 4. G√ÅN D·ªÆ LI·ªÜU CU·ªêI C√ôNG V√ÄO ENTITY
        news.setTitle(title);
        news.setContent(content);
        news.setImage(fileName);
        
        try {
            news.setPostedDate(Date.valueOf(postedDateStr));
        } catch (IllegalArgumentException | NullPointerException e) {
            news.setPostedDate(new Date(System.currentTimeMillis()));
        }
        
        news.setAuthor(authorId);
        news.setCategoryId(categoryId);
        news.setHome(home); 
        news.setPosition(position);
        news.setStatus(status != null ? status : "Ch∆∞a duy·ªát"); 

        // 5. G·ªåI DAO V√Ä CHUY·ªÇN H∆Ø·ªöNG
        boolean result = isUpdating ? newsDAO.update(news) : newsDAO.insert(news);

        if (result) {
            // üì¢ FIX L·ªñI: B·∫ÆT BU·ªòC PH·∫¢I D√ôNG sendRedirect ƒê·ªÇ NGƒÇN JSP HI·ªÇN TH·ªä SAI TI√äU ƒê·ªÄ
            
            String redirectURL = user.isRole() 
                ? req.getContextPath() + "/admin/manage_all_news?message=" + successMessage
                : req.getContextPath() + "/reporter/manage_my_news?message=" + successMessage;
                
            resp.sendRedirect(redirectURL);
            
        } else {
            // X·ª≠ l√Ω th·∫•t b·∫°i: S·ª≠ d·ª•ng CategoryDAO ƒë·ªÉ hi·ªÉn th·ªã l·∫°i menu
            String errorMessage = "L∆∞u tin th·∫•t b·∫°i! Vui l√≤ng ki·ªÉm tra l·∫°i.";
            
            CategoryDAO categoryDAO = new CategoryDAOImpl();
            req.setAttribute("categories", categoryDAO.findAll()); 
            
            req.setAttribute("news", news);
            req.setAttribute("errorMessage", errorMessage);
            
            req.getRequestDispatcher("/admin/manage_all_news.jsp").forward(req, resp);
        }
    }
}